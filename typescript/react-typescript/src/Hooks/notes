useState

useEffect: usedd to fetch API call

useEffect(()=>{}) - it will execute every time when the component is render/re-render/mount
useEffect(()=>{},[]) - it will execute only when component is mounted 
useEffect(()=>{},[dependenies]) - it will execute only when dependenies changed 
useEffect(()=>{return ()=>{}}[]) - it will execute only when component is Un-mounted(Ex:remove  eventListners, removing db connections)  


useState = state 
useEffect = fetching || side effects
useContext = context || global state 
useReducer = Reducer
useReducer is used for state management
it is alternative to useState
internally useReducer using useState hook only 



syncronus javascript
usyncrouns javascript